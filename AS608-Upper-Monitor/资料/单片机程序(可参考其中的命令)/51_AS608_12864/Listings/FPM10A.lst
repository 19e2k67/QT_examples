C51 COMPILER V9.57.0.0   FPM10A                                                            10/20/2023 15:19:04 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE FPM10A
OBJECT MODULE PLACED IN .\Objects\FPM10A.obj
COMPILER INVOKED BY: F:\keil5\keil\C51\BIN\C51.EXE App\FPM10A.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App;.\Public) DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\FPM10A.lst) OBJECT(.\Objects\FPM10A.obj)

line level    source

   1          
   2          #include <FPM10A.h>
   3          
   4          volatile unsigned char FPM10A_RECEICE_BUFFER[32];
   5          unsigned int finger_id = 0;
   6          
   7          //FINGERPRINTÍ¨ÐÅÐ­Òé¶¨Òå
   8          
   9          code unsigned char FPM10A_Get_Device[10] = {0x01, 0x00, 0x07, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b}; /
             -/¿ÚÁîÑéÖ¤
  10          code unsigned char FPM10A_Pack_Head[6] = {0xEF, 0x01, 0xFF, 0xFF, 0xFF, 0xFF}; //Ð­Òé°üÍ·
  11          code unsigned char FPM10A_Get_Img[6] = {0x01, 0x00, 0x03, 0x01, 0x00, 0x05}; //»ñµÃÖ¸ÎÆÍ¼Ïñ
  12          code unsigned char FPM10A_Get_Templete_Count[6] = {0x01, 0x00, 0x03, 0x1D, 0x00, 0x21 }; //»ñµÃÄ£°æ×ÜÊý
  13          code unsigned char FPM10A_Search[11] = {0x01, 0x00, 0x08, 0x04, 0x01, 0x00, 0x00, 0x03, 0xE7, 0x00, 0xF8};
             - //ËÑË÷Ö¸ÎÆËÑË÷·¶Î§0 - 999,Ê¹ÓÃBUFFER1ÖÐµÄÌØÕ÷ÂëËÑË÷
  14          code unsigned char FPM10A_Search_0_9[11] = {0x01, 0x00, 0x08, 0x04, 0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x
             -21}; //ËÑË÷0-9ºÅÖ¸ÎÆ
  15          code unsigned char FPM10A_Img_To_Buffer1[7] = {0x01, 0x00, 0x04, 0x02, 0x01, 0x00, 0x08}; //½«Í¼Ïñ·ÅÈëµ½BU
             -FFER1
  16          code unsigned char FPM10A_Img_To_Buffer2[7] = {0x01, 0x00, 0x04, 0x02, 0x02, 0x00, 0x09}; //½«Í¼Ïñ·ÅÈëµ½BU
             -FFER2
  17          code unsigned char FPM10A_Reg_Model[6] = {0x01, 0x00, 0x03, 0x05, 0x00, 0x09}; //½«BUFFER1¸úBUFFER2ºÏ³ÉÌØÕ
             -÷Ä£°æ
  18          code unsigned char FPM10A_Delete_All_Model[6] = {0x01, 0x00, 0x03, 0x0d, 0x00, 0x11}; //É¾³ýÖ¸ÎÆÄ£¿éÀïËùÓÐ
             -µÄÄ£°æ
  19          volatile unsigned char  FPM10A_Save_Finger[9] = {0x01, 0x00, 0x06, 0x06, 0x01, 0x00, 0x0B, 0x00, 0x19}; //
             -½«BUFFER1ÖÐµÄÌØÕ÷Âë´æ·Åµ½Ö¸¶¨µÄÎ»ÖÃ
  20          //volatile:ÏµÍ³×ÜÊÇÖØÐÂ´ÓËüËùÔÚµÄÄÚ´æ¶ÁÈ¡Êý¾Ý£¬¼´Ê¹ËüÇ°ÃæµÄÖ¸Áî¸Õ¸Õ´Ó¸Ã´¦¶ÁÈ¡¹ýÊý¾Ý
  21          /*------------------ FINGERPRINTÃüÁî×Ö --------------------------*/
  22          //·¢ËÍ°üÍ·
  23          void FPM10A_Cmd_Send_Pack_Head(void)
  24          {
  25   1              int i;
  26   1              for (i = 0; i < 6; i++) { //°üÍ·
  27   2                      Uart_Send_Byte(FPM10A_Pack_Head[i]);
  28   2              }
  29   1      }
  30          //·¢ËÍÖ¸Áî
  31          void FPM10A_Cmd_Check(void)
  32          {
  33   1              int i = 0;
  34   1              FPM10A_Cmd_Send_Pack_Head(); //·¢ËÍÍ¨ÐÅÐ­Òé°üÍ·
  35   1              for (i = 0; i < 10; i++) {
  36   2                      Uart_Send_Byte(FPM10A_Get_Device[i]);
  37   2              }
  38   1      }
  39          //½ÓÊÕ·´À¡Êý¾Ý»º³å
  40          void FPM10A_Receive_Data(unsigned char ucLength)
  41          {
  42   1              unsigned char i;
  43   1      
  44   1              for (i = 0; i < ucLength; i++)
  45   1                      FPM10A_RECEICE_BUFFER[i] = Uart_Receive_Byte();
  46   1      
C51 COMPILER V9.57.0.0   FPM10A                                                            10/20/2023 15:19:04 PAGE 2   

  47   1      }
  48          
  49          //FINGERPRINT_»ñµÃÖ¸ÎÆÍ¼ÏñÃüÁî
  50          void FPM10A_Cmd_Get_Img(void)
  51          {
  52   1              unsigned char i;
  53   1              FPM10A_Cmd_Send_Pack_Head(); //·¢ËÍÍ¨ÐÅÐ­Òé°üÍ·
  54   1              for (i = 0; i < 6; i++) { //·¢ËÍÃüÁî 0x1d
  55   2                      Uart_Send_Byte(FPM10A_Get_Img[i]);
  56   2              }
  57   1      }
  58          //½²Í¼Ïñ×ª»»³ÉÌØÕ÷Âë´æ·ÅÔÚBuffer1ÖÐ
  59          void FINGERPRINT_Cmd_Img_To_Buffer1(void)
  60          {
  61   1              unsigned char i;
  62   1              FPM10A_Cmd_Send_Pack_Head(); //·¢ËÍÍ¨ÐÅÐ­Òé°üÍ·
  63   1              for (i = 0; i < 7; i++) { //·¢ËÍÃüÁî ½«Í¼Ïñ×ª»»³É ÌØÕ÷Âë ´æ·ÅÔÚ CHAR_buffer1
  64   2                      Uart_Send_Byte(FPM10A_Img_To_Buffer1[i]);
  65   2              }
  66   1      }
  67          //½«Í¼Ïñ×ª»»³ÉÌØÕ÷Âë´æ·ÅÔÚBuffer2ÖÐ
  68          void FINGERPRINT_Cmd_Img_To_Buffer2(void)
  69          {
  70   1              unsigned char i;
  71   1              for (i = 0; i < 6; i++) { //·¢ËÍ°üÍ·
  72   2                      Uart_Send_Byte(FPM10A_Pack_Head[i]);
  73   2              }
  74   1              for (i = 0; i < 7; i++) { //·¢ËÍÃüÁî ½«Í¼Ïñ×ª»»³É ÌØÕ÷Âë ´æ·ÅÔÚ CHAR_buffer1
  75   2                      Uart_Send_Byte(FPM10A_Img_To_Buffer2[i]);
  76   2              }
  77   1      }
  78          //ËÑË÷È«²¿ÓÃ»§999Ã¶
  79          void FPM10A_Cmd_Search_Finger(void)
  80          {
  81   1              unsigned char i;
  82   1              FPM10A_Cmd_Send_Pack_Head(); //·¢ËÍÍ¨ÐÅÐ­Òé°üÍ·
  83   1              for (i = 0; i < 11; i++) {
  84   2                      Uart_Send_Byte(FPM10A_Search[i]);
  85   2              }
  86   1      }
  87          
  88          void FPM10A_Cmd_Reg_Model(void)
  89          {
  90   1              unsigned char i;
  91   1      
  92   1              FPM10A_Cmd_Send_Pack_Head(); //·¢ËÍÍ¨ÐÅÐ­Òé°üÍ·
  93   1      
  94   1              for (i = 0; i < 6; i++) {
  95   2                      Uart_Send_Byte(FPM10A_Reg_Model[i]);
  96   2              }
  97   1      
  98   1      
  99   1      }
 100          //É¾³ýÖ¸ÎÆÄ£¿éÀïµÄËùÓÐÖ¸ÎÆÄ£°æ
 101          void FINGERPRINT_Cmd_Delete_All_Model(void)
 102          {
 103   1              unsigned char i;
 104   1              for (i = 0; i < 6; i++) //°üÍ·
 105   1                      Uart_Send_Byte(FPM10A_Pack_Head[i]);
 106   1              for (i = 0; i < 6; i++) { //ÃüÁîºÏ²¢Ö¸ÎÆÄ£°æ
 107   2                      Uart_Send_Byte(FPM10A_Delete_All_Model[i]);
 108   2              }
C51 COMPILER V9.57.0.0   FPM10A                                                            10/20/2023 15:19:04 PAGE 3   

 109   1      }
 110          //±£´æÖ¸ÎÆ
 111          void FPM10A_Cmd_Save_Finger( unsigned int storeID )
 112          {
 113   1              unsigned long temp = 0;
 114   1              unsigned char i;
 115   1              FPM10A_Save_Finger[5] = (storeID & 0xFF00) >> 8;
 116   1              FPM10A_Save_Finger[6] = (storeID & 0x00FF);
 117   1              for (i = 0; i < 7; i++) //¼ÆËãÐ£ÑéºÍ
 118   1                      temp = temp + FPM10A_Save_Finger[i];
 119   1              FPM10A_Save_Finger[7] = (temp & 0x00FF00) >> 8; //´æ·ÅÐ£ÑéÊý¾Ý
 120   1              FPM10A_Save_Finger[8] = temp & 0x0000FF;
 121   1              FPM10A_Cmd_Send_Pack_Head(); //·¢ËÍÍ¨ÐÅÐ­Òé°üÍ·
 122   1              for (i = 0; i < 9; i++)
 123   1                      Uart_Send_Byte(FPM10A_Save_Finger[i]);      //·¢ËÍÃüÁî ½«Í¼Ïñ×ª»»³É ÌØÕ÷Âë ´æ·ÅÔÚ CHAR_buffer1
 124   1      }
 125          //Ìí¼ÓÖ¸ÎÆ
 126          void FPM10A_Add_Fingerprint()
 127          {
 128   1              unsigned char id_show[] = {0, 0, 0};
 129   1          lcd12864_clear();
 130   1          lcd12864_show_string(3,1,"0");
 131   1              while (1) {
 132   2              lcd12864_show_string(1,0,"Ìí¼ÓÖ¸ÎÆ");    //Ìí¼ÓºÍÉ¾³ýÖ¸ÎÆ
 133   2              lcd12864_show_string(1,1,"ID =");
 134   2                      //°´·µ»Ø¼üÖ±½Ó»Øµ½Ö÷²Ëµ¥
 135   2                      if (KEY_CANCEL == 0) {
 136   3                              delay_ms(5);
 137   3                              if (KEY_CANCEL == 0) {
 138   4                                      while (KEY_CANCEL == 0);
 139   4                                      break;
 140   4                              }
 141   3                      }
 142   2              //°´ÇÐ»»¼üÖ¸ÎÆiDÖµ¼õ1
 143   2                      if (KEY_UP == 0) {
 144   3                              delay_ms(5);
 145   3                              if (KEY_UP == 0) {
 146   4                                      while (KEY_UP == 0);
 147   4                                      if (finger_id == 0){
 148   5                          lcd12864_show_string(3,1,"299 ");
 149   5                                              finger_id = 299;
 150   5                      }
 151   4                                      else{
 152   5                                              finger_id = finger_id - 1;
 153   5                      }
 154   4                              }
 155   3                      }
 156   2              
 157   2      
 158   2                      //°´ÇÐ»»¼üÖ¸ÎÆiDÖµ¼Ó1
 159   2                      if (KEY_DOWN == 0) {
 160   3                              delay_ms(5);
 161   3                              if (KEY_DOWN == 0) {
 162   4                                      while (KEY_DOWN == 0);
 163   4                                      if (finger_id == 299){
 164   5                                              finger_id = 0;
 165   5                      }
 166   4                                      else
 167   4                                              finger_id = finger_id + 1;
 168   4                              }
 169   3                      }
 170   2              lcd12864_show_num(3,1,finger_id,3);
C51 COMPILER V9.57.0.0   FPM10A                                                            10/20/2023 15:19:04 PAGE 4   

 171   2                      //°´È·ÈÏ¼ü¿ªÊ¼Â¼ÈëÖ¸ÎÆÐÅÏ¢
 172   2                      if (KEY_OK == 0) {
 173   3                              delay_ms(5);
 174   3                              if (KEY_OK == 0) {
 175   4                                      while (KEY_OK == 0);
 176   4                      lcd12864_clear();
 177   4                      lcd12864_show_string(1,0,"Çë°´Ñ¹ÊÖÖ¸");
 178   4      
 179   4                                      while (KEY_CANCEL == 1) {
 180   5                                              //°´ÏÂ·µ»Ø¼üÍË³öÂ¼Èë·µ»ØfingerIDµ÷Õû×´Ì¬
 181   5                                              if (KEY_CANCEL == 0) {
 182   6                                                      delay_ms(5);
 183   6                                                      if (KEY_CANCEL == 0) {
 184   7                                                              while (KEY_CANCEL == 0);
 185   7                                                              break;
 186   7                                                      }
 187   6                                              }
 188   5      
 189   5                                              FPM10A_Cmd_Get_Img(); //»ñµÃÖ¸ÎÆÍ¼Ïñ
 190   5                                              FPM10A_Receive_Data(12);
 191   5                                              //ÅÐ¶Ï½ÓÊÕµ½µÄÈ·ÈÏÂë,µÈÓÚ0Ö¸ÎÆ»ñÈ¡³É¹¦
 192   5                                              if (FPM10A_RECEICE_BUFFER[9] == 0) {
 193   6                                                      delay_ms(100);
 194   6                                                      FINGERPRINT_Cmd_Img_To_Buffer1();
 195   6                                                      FPM10A_Receive_Data(12);
 196   6                              lcd12864_clear();
 197   6                              lcd12864_show_string(2,0,"³É¹¦½øÈë");
 198   6                                                      delay_ms(1000);
 199   6                                                      lcd12864_show_string(2,0,"ÔÙ°´Ò»´Î");
 200   6                                                      while (1) {
 201   7                                                              if (KEY_CANCEL == 0) {
 202   8                                                                      delay_ms(5);
 203   8                                                                      if (KEY_CANCEL == 0) {
 204   9                                                                              while (KEY_CANCEL == 0);
 205   9                                                                              break;
 206   9                                                                      }
 207   8                                                              }
 208   7      
 209   7                                                              FPM10A_Cmd_Get_Img(); //»ñµÃÖ¸ÎÆÍ¼Ïñ
 210   7                                                              FPM10A_Receive_Data(12);
 211   7                                                              //ÅÐ¶Ï½ÓÊÕµ½µÄÈ·ÈÏÂë,µÈÓÚ0Ö¸ÎÆ»ñÈ¡³É¹¦
 212   7                                                              if (FPM10A_RECEICE_BUFFER[9] == 0) {
 213   8                                                                      delay_ms(200);
 214   8                                      lcd12864_clear();
 215   8                                      lcd12864_show_string(1,0,"Ìí¼Ó³É¹¦");
 216   8                                      lcd12864_show_string(1,1,"ID =");
 217   8                                      lcd12864_show_num(3,1,finger_id,3);
 218   8                                      lcd12864_show_string(1,2,"ÊÇ·ñ¼ÌÐøÌí¼Ó");
 219   8                                                                      FINGERPRINT_Cmd_Img_To_Buffer2();
 220   8                                                                      FPM10A_Receive_Data(12);
 221   8                                                                      FPM10A_Cmd_Reg_Model();//×ª»»³ÉÌØÕ÷Âë
 222   8                                                                      FPM10A_Receive_Data(12);
 223   8                                                                      FPM10A_Cmd_Save_Finger(finger_id);
 224   8                                                                      FPM10A_Receive_Data(12);
 225   8                                                                      delay_ms(1000);
 226   8                                                                      finger_id = finger_id + 1;
 227   8                                      if (finger_id == 300)
 228   8                                          finger_id = 0;
 229   8                                                                      break;
 230   8                                                              }
 231   7                                                      }
 232   6                                                      break;
C51 COMPILER V9.57.0.0   FPM10A                                                            10/20/2023 15:19:04 PAGE 5   

 233   6                                              }
 234   5                                      }
 235   4                              }
 236   3                      }
 237   2              }
 238   1          lcd12864_clear();
 239   1          lcd12864_show_string(2,0,"Ö¸ÎÆ²âÊÔ");
 240   1          lcd12864_show_string(1,1,"ËÑË÷Ö¸ÎÆ");
 241   1              lcd12864_show_string(1,2,"Ìí¼ÓÖ¸ÎÆ");    //Ìí¼ÓºÍÉ¾³ýÖ¸ÎÆ
 242   1              lcd12864_show_string(1,3,"Çå¿ÕÖ¸ÎÆ");
 243   1      }
 244          //ËÑË÷Ö¸ÎÆ
 245          void FPM10A_Find_Fingerprint()
 246          {
 247   1              unsigned int find_fingerid = 0;
 248   1              unsigned char id_show[] = {0, 0, 0};
 249   1          lcd12864_clear();
 250   1              do {
 251   2              lcd12864_show_string(1,0,"Çë°´Ñ¹ÊÖÖ¸");
 252   2                      FPM10A_Cmd_Get_Img(); //»ñµÃÖ¸ÎÆÍ¼Ïñ
 253   2                      FPM10A_Receive_Data(12);
 254   2                      //ÅÐ¶Ï½ÓÊÕµ½µÄÈ·ÈÏÂë,µÈÓÚ0Ö¸ÎÆ»ñÈ¡³É¹¦
 255   2                      if (FPM10A_RECEICE_BUFFER[9] == 0) {
 256   3                              delay_ms(100);
 257   3                              FINGERPRINT_Cmd_Img_To_Buffer1();
 258   3                              FPM10A_Receive_Data(12);
 259   3                              FPM10A_Cmd_Search_Finger();
 260   3                              FPM10A_Receive_Data(16);
 261   3                              if (FPM10A_RECEICE_BUFFER[9] == 0) { //ËÑË÷µ½
 262   4                  lcd12864_clear();
 263   4                  lcd12864_show_string(1,0,"ËÑË÷³É¹¦");
 264   4                  lcd12864_show_string(1,1,"ID =");
 265   4                                      Buzz_Times(1);
 266   4                                      //Æ´½ÓÖ¸ÎÆIDÊý
 267   4                                      find_fingerid = FPM10A_RECEICE_BUFFER[10] * 256 + FPM10A_RECEICE_BUFFER[11];
 268   4                                      //Ö¸ÎÆiDÖµÏÔÊ¾´¦Àí
 269   4                      lcd12864_show_num(3,1,find_fingerid,3);
 270   4                                      delay_ms(1000);
 271   4                      lcd12864_clear();
 272   4                              }
 273   3                              else { //Ã»ÓÐÕÒµ½
 274   4                      lcd12864_clear();
 275   4                      lcd12864_show_string(2,0,"ËÑË÷Ê§°Ü");
 276   4                                      Buzz_Times(3);
 277   4                              }
 278   3                      }
 279   2              }
 280   1              while (KEY_CANCEL == 1);
 281   1          lcd12864_clear();
 282   1          lcd12864_show_string(2,0,"Ö¸ÎÆ²âÊÔ");
 283   1          lcd12864_show_string(1,1,"ËÑË÷Ö¸ÎÆ");
 284   1              lcd12864_show_string(1,2,"Ìí¼ÓÖ¸ÎÆ");    //Ìí¼ÓºÍÉ¾³ýÖ¸ÎÆ
 285   1              lcd12864_show_string(1,3,"Çå¿ÕÖ¸ÎÆ");
 286   1      }
 287          //É¾³ýËùÓÐ´æÖüµÄÖ¸ÎÆ¿â
 288          void FPM10A_Delete_All_Fingerprint()
 289          {
 290   1              unsigned char i = 0;
 291   1          lcd12864_clear();
 292   1          lcd12864_show_string(2,0,"Çå¿ÕÈ«²¿£¿");
 293   1          lcd12864_show_string(1,1,"È·¶¨    È¡Ïû");
 294   1              do {
C51 COMPILER V9.57.0.0   FPM10A                                                            10/20/2023 15:19:04 PAGE 6   

 295   2                      if (KEY_OK == 0) {
 296   3                              delay_ms(5);
 297   3                              if (KEY_OK == 0) {
 298   4                                      while (KEY_OK == 0);
 299   4                      lcd12864_clear();
 300   4                      lcd12864_show_string(2,0,"Çå¿ÕÖÐ¡­¡­");
 301   4                                      delay_ms(300);
 302   4                                      for (i = 0; i < 8; i++) {
 303   5                                              lcd12864_show_string(i,1,"*");
 304   5                                              delay_ms(200);
 305   5                                      }
 306   4                                      FINGERPRINT_Cmd_Delete_All_Model();
 307   4                                      FPM10A_Receive_Data(12);
 308   4                      lcd12864_clear();
 309   4                      lcd12864_show_string(2,0,"Çå¿ÕÍê³É");
 310   4      
 311   4                                      break;
 312   4                              }
 313   3                      }
 314   2              }
 315   1              while (KEY_CANCEL == 1);
 316   1          lcd12864_clear();
 317   1          lcd12864_show_string(2,0,"Ö¸ÎÆ²âÊÔ");
 318   1          lcd12864_show_string(1,1,"ËÑË÷Ö¸ÎÆ");
 319   1              lcd12864_show_string(1,2,"Ìí¼ÓÖ¸ÎÆ");    //Ìí¼ÓºÍÉ¾³ýÖ¸ÎÆ
 320   1              lcd12864_show_string(1,3,"Çå¿ÕÖ¸ÎÆ");
 321   1      }
 322          void Device_Check(void)
 323          {
 324   1              unsigned char i = 0;
 325   1              FPM10A_RECEICE_BUFFER[9] = 1;                                    //´®¿ÚÊý×éµÚ¾ÅÎ»¿ÉÅÐ¶ÏÊÇ·ñÍ¨ÐÅÕý³£
 326   1          lcd12864_clear();
 327   1          lcd12864_show_string(2,0,"¼ÓÔØÖÐ");         //Éè±¸¼ÓÔØÖÐ½çÃæ
 328   1              for (i = 0; i < 8; i++) {                                           //½ø¶ÈÌõÊ½¸üÐÂ£¬¿´ÆðÀ´ÃÀ¹Û
 329   2              lcd12864_show_string(i,1,"*");                       //42¶ÔÓ¦ASICÂëµÄ *
 330   2                      delay_ms(200);                                                     //¿ØÖÆ½ø¶ÈÌõËÙ¶È
 331   2              }
 332   1          lcd12864_clear();
 333   1          lcd12864_show_string(2,0,"¶Ô½ÓÊ§°Ü");  //Òº¾§ÏÈÏÔÊ¾¶Ô½ÓÊ§°Ü£¬Èç¹ûÖ¸ÎÆÄ£¿é²å¶ÔµÄ»°»á½«Æä¸²¸Ç
 334   1          FPM10A_Cmd_Check();                                                                 //µ¥Æ¬»úÏòÖ¸ÎÆÄ£¿é·¢ËÍÐ£¶ÔÃüÁî
 335   1          FPM10A_Receive_Data(12);                                                    //½«´®¿Ú½ÓÊÕµ½µÄÊý¾Ý×ª´æ
 336   1              if (FPM10A_RECEICE_BUFFER[9] == 0) {                            //ÅÐ¶ÏÊý¾ÝµÍµÚ9Î»ÊÇ·ñ½ÓÊÕµ½0
 337   2              lcd12864_clear();
 338   2              lcd12864_show_string(2,0,"¶Ô½Ó³É¹¦");  //·ûºÏ³É¹¦Ìõ¼þÔòÏÔÊ¾¶Ô½Ó³É¹¦
 339   2              }
 340   1      }
 341          
 342          
 343          
 344          
 345          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1491    ----
   CONSTANT SIZE    =    270    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     43      27
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.57.0.0   FPM10A                                                            10/20/2023 15:19:04 PAGE 7   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
